{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","useEffect","noteService","initialNotes","notesToShow","filter","onSubmit","event","preventDefault","console","log","type","value","name","onChange","target","map","i","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","noteObject","date","Date","toISOString","Math","random","length","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e252d83e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n      color: 'green',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n  \r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>Note app, Emil Salmi</em>\r\n      </div>\r\n    )\r\n  }\r\n  export default Footer","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }\r\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer'\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n  \n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = (id) => {\n    const url = `http://localhost:3001/notes/${id}`\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)   \n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n    const handleLogin = (event) => {\n      event.preventDefault()\n      console.log('logging in with', username, password)\n    }\n  \n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <h2>Login</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n\n      <div>\n\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>      \n      <ul>\n        {notesToShow.map((note, i) => \n          <Note\n            key={i}\n            note={note} \n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}