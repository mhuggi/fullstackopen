{"version":3,"sources":["services/blogs.js","components/Blog.js","components/BlogForm.js","components/Togglable.js","components/Notification.js","services/login.js","App.js","index.js"],"names":["token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","like","id","likes","put","request","del","delete","Blog","blog","useState","showMore","setShowMore","toggleMore","loggedUser","JSON","parse","localStorage","getItem","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","style","title","author","type","onClick","url","className","blogs","_id","user","name","username","window","confirm","BlogForm","createBlog","newTitle","setNewTitle","newAuth","setNewAuth","newUrl","setNewUrl","onSubmit","event","preventDefault","value","onChange","e","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","Notification","message","login","credentials","App","setBlogs","errorMessage","setErrorMessage","setUsername","password","setPassword","setUser","blogFormRef","useRef","useEffect","blogService","loggedUserJSON","addBlog","blogObj","current","returnedBlog","concat","setTimeout","handleLogin","loginService","setItem","stringify","removeItem","location","reload","sort","b","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df71854a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst like = async (id, newObject) => {\r\n  newObject.likes += 1\r\n  const request = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.data\r\n}\r\n\r\nconst del = async id => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, setToken, create, like, del }","import React, { useState } from 'react'\r\nimport blogs from '../services/blogs'\r\n\r\n\r\nconst Blog = ({ blog }) => {\r\n  const [showMore, setShowMore] = useState(false)\r\n\r\n\r\n  const toggleMore = () => {\r\n    setShowMore(!showMore)\r\n  }\r\n  const like = (blog) => {\r\n    blogs.like(blog._id, blog)\r\n  }\r\n\r\n  const loggedUser = JSON.parse(localStorage.getItem('loggedBlogUser'))\r\n  const DelButton = (user) => {\r\n    if (loggedUser === null) {\r\n      return null\r\n    }\r\n    else if (loggedUser.username === user.user) {\r\n      return <button type=\"button\" onClick={() => {\r\n        if (window.confirm(`Are you sure you want to delete ${blog.title} by ${blog.author}?`)) {\r\n          blogs.del(blog._id)\r\n        }\r\n      }}>Delete</button>\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n  if (showMore === false) {\r\n    return (\r\n      <div style={blogStyle}>\r\n        <div>\r\n          {blog.title} {blog.author}\r\n          <button type=\"button\" onClick={toggleMore}>View</button>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  } else {\r\n    return (\r\n      <div style={blogStyle}>\r\n        <div>\r\n          {blog.title} {blog.author}\r\n          <button type=\"button\" onClick={toggleMore}>Hide</button>\r\n          <p>{blog.url}</p>\r\n          <p>likes {blog.likes}<button type=\"button\" className=\"likeButton\" onClick={() => like(blog)}>like</button></p>\r\n          <p>{blog.user.name}</p>\r\n          <DelButton user={blog.user.username} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Blog\r\n","import React, { useState } from 'react'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n  const [newTitle, setNewTitle] = useState([])\r\n  const [newAuth, setNewAuth] = useState([])\r\n  const [newUrl, setNewUrl] = useState([])\r\n\r\n  const handleTitleChange = (e) => {\r\n    setNewTitle(e.target.value)\r\n  }\r\n  const handleAuthChange = (e) => {\r\n    setNewAuth(e.target.value)\r\n  }\r\n  const handleUrlChange = (e) => {\r\n    setNewUrl(e.target.value)\r\n  }\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    createBlog({\r\n      title: newTitle,\r\n      author: newAuth,\r\n      url: newUrl,\r\n    })\r\n    setNewTitle('')\r\n    setNewAuth('')\r\n    setNewUrl('')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>create new</h2>\r\n      <form onSubmit={addBlog}>\r\n        <p>Title: <input value={newTitle} onChange={handleTitleChange} /></p>\r\n        <p>Author: <input value={newAuth} onChange={handleAuthChange} /></p>\r\n        <p>Url: <input value={newUrl} onChange={handleUrlChange} /></p>\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default BlogForm\r\n","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport BlogForm from './components/BlogForm'\r\nimport Togglable from './components/Togglable'\r\nimport Notification from './components/Notification'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const blogFormRef = useRef()\r\n\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n\r\n  const addBlog = (blogObj) => {\r\n    blogFormRef.current.toggleVisibility()\r\n    blogService\r\n      .create(blogObj)\r\n      .then(returnedBlog => {\r\n        setBlogs(blogs.concat(returnedBlog))\r\n        setErrorMessage('Created ' + blogObj.title + ' by ' + blogObj.author)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      })\r\n  }\r\n\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogUser', JSON.stringify(user)\r\n      )\r\n\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n  const logOut = () => {\r\n    window.localStorage.removeItem('loggedBlogUser')\r\n    window.location.reload(false)\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>\r\n  )\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel='new blog' ref={blogFormRef}>\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n\r\n  )\r\n  if (user === null) {\r\n    return (\r\n      <div>\r\n        <h2>Log in to application</h2>\r\n        <Notification message={errorMessage} />\r\n        {loginForm()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <Notification message={errorMessage} />\r\n      <p>Logged in as {user.name}\r\n        <button onClick={() => logOut()}>logout</button></p>\r\n      {blogForm()}\r\n      <h2>blogs</h2>\r\n\r\n      {blogs\r\n        .sort((a, b) => a.likes < b.likes ? 1 : -1)\r\n        .map(blog =>\r\n          <Blog key={blog.id} blog={blog} />\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}