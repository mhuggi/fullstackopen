{"version":3,"sources":["components/Blog.js","components/Notification.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","Notification","message","className","token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","login","credentials","App","useState","blogs","setBlogs","newTitle","setNewTitle","newAuth","setNewAuth","newUrl","setNewUrl","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","addBlog","event","preventDefault","blogObj","url","returnedBlog","concat","setTimeout","handleLogin","loginService","setItem","stringify","handleTitleChange","e","target","value","handleAuthChange","handleUrlChange","onSubmit","type","name","onChange","onClick","removeItem","location","reload","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e03bb7c3.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\n\r\nexport default { getAll, setToken, create }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport Notification from './components/Notification'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login' \r\n\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [newTitle, setNewTitle] = useState([])\r\n  const [newAuth, setNewAuth] = useState([])\r\n  const [newUrl, setNewUrl] = useState([])\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [username, setUsername] = useState('') \r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n\r\n  const addBlog = (event) => {\r\n    event.preventDefault()\r\n    const blogObj = {\r\n      title: newTitle,\r\n      author: newAuth,\r\n      url: newUrl,\r\n    }\r\n    blogService\r\n      .create(blogObj)\r\n      .then(returnedBlog => {\r\n        setBlogs(blogs.concat(returnedBlog))\r\n        setNewTitle('')\r\n        setNewUrl('')\r\n        setNewAuth('')\r\n        setErrorMessage('Created ' + blogObj.title + ' by ' + blogObj.author)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      })\r\n  }\r\n\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogUser', JSON.stringify(user)\r\n      ) \r\n\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n  const logOut = () => {\r\n    window.localStorage.removeItem('loggedBlogUser')\r\n    window.location.reload(false)\r\n  }\r\n\r\n  const handleTitleChange = (e) => {\r\n    setNewTitle(e.target.value)\r\n  }\r\n  const handleAuthChange = (e) => {\r\n    setNewAuth(e.target.value)\r\n  }\r\n  const handleUrlChange = (e) => {\r\n    setNewUrl(e.target.value)\r\n  }\r\n\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>      \r\n  )\r\n\r\n  const blogForm = () => (\r\n    <div>\r\n    <h2>create new</h2>\r\n    <form onSubmit={addBlog}>\r\n      <p>Title<input value={newTitle} onChange={handleTitleChange} /></p>\r\n      <p>Author<input value={newAuth} onChange={handleAuthChange} /></p>\r\n      <p>Url<input value={newUrl} onChange={handleUrlChange} /></p>\r\n      <button type=\"submit\">save</button>\r\n    </form>\r\n    </div>\r\n  )\r\n  if (user === null) {\r\n    return (\r\n      <div>\r\n        <h2>Log in to application</h2>\r\n        <Notification message={errorMessage} />\r\n        {loginForm()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <Notification message={errorMessage} />\r\n      <p>Logged in as {user.name}\r\n      <button onClick={() => logOut()}>logout</button></p>\r\n      {blogForm()}\r\n      <h2>blogs</h2>\r\n      {blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}