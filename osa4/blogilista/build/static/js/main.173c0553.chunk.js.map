{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","axios","get","then","response","data","newToken","login","credentials","a","post","App","useState","blogs","setBlogs","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","token","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","onSubmit","type","value","name","onChange","target","onClick","removeItem","location","reload","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"2OAOeA,EANF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,6BACGA,EAAKC,MADR,IACgBD,EAAKE,S,gBCUR,EARA,WAEb,OADgBC,IAAMC,IALR,cAMCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAM5B,EAJE,SAAAC,GACV,iBAAaA,ICFL,GAAEC,MALN,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACWR,IAAMS,KAHf,aAG6BF,GAD/B,cACNJ,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCmGIM,EAhGH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEwBF,mBAAS,MAFjC,mBAEKG,GAFL,aAIgBH,mBAAS,IAJzB,mBAITI,EAJS,KAICC,EAJD,OAKgBL,mBAAS,IALzB,mBAKTM,EALS,KAKCC,EALD,OAMQP,mBAAS,MANjB,mBAMTQ,EANS,KAMHC,EANG,KAShBC,qBAAU,WACRC,IAAqBpB,MAAK,SAAAU,GAAK,OAC7BC,EAAUD,QAEX,IAEHS,qBAAU,WACR,IAAME,EAAiBC,OAAOC,aAAaC,QAAQ,kBACnD,GAAIH,EAAgB,CAClB,IAAMJ,EAAOQ,KAAKC,MAAML,GACxBH,EAAQD,GACRG,EAAqBH,EAAKU,UAE3B,IAGH,IAAMC,EAAW,uCAAG,WAAOC,GAAP,eAAAvB,EAAA,6DAClBuB,EAAMC,iBADY,kBAGGC,EAAa3B,MAAM,CACpCS,WAAUE,aAJI,OAGVE,EAHU,OAOhBK,OAAOC,aAAaS,QAClB,iBAAkBP,KAAKQ,UAAUhB,IAGnCC,EAAQD,GACRH,EAAY,IACZE,EAAY,IAbI,kDAehBJ,EAAgB,qBAChBsB,YAAW,WACTtB,EAAgB,QACf,KAlBa,0DAAH,sDAiDjB,OAAa,OAATK,EAEA,6BACE,qDAzBJ,0BAAMkB,SAAUP,GACd,wCAEI,2BACAQ,KAAK,OACLC,MAAOxB,EACPyB,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB1B,EAAY0B,EAAOH,WAGjD,wCAEI,2BACAD,KAAK,WACLC,MAAOtB,EACPuB,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBxB,EAAYwB,EAAOH,WAGjD,4BAAQD,KAAK,UAAb,WAcF,6BACE,2CAAiBnB,EAAKqB,KACtB,4BAAQG,QAAS,kBAxCnBnB,OAAOC,aAAamB,WAAW,uBAC/BpB,OAAOqB,SAASC,QAAO,KAuCrB,WACA,qCACClC,EAAMmC,KAAI,SAAAlD,GAAI,OACb,kBAAC,EAAD,CAAMmD,IAAKnD,EAAKoD,GAAIpD,KAAMA,SC5FlCqD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.173c0553.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nexport default { getAll, setToken }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login' \r\n\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const [username, setUsername] = useState('') \r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogUser', JSON.stringify(user)\r\n      ) \r\n\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n  const logOut = () => {\r\n    window.localStorage.removeItem('loggedBlogUser')\r\n    window.location.reload(false)\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>      \r\n  )\r\n  if (user === null) {\r\n    return (\r\n      <div>\r\n        <h2>Log in to application</h2>\r\n        {loginForm()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <p>Logged in as {user.name}\r\n      <button onClick={() => logOut()}>logout</button></p>\r\n      <h2>blogs</h2>\r\n      {blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}