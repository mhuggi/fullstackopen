{"version":3,"sources":["components/Blog.js","components/BlogForm.js","components/Togglable.js","components/Notification.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","BlogForm","createBlog","useState","newTitle","setNewTitle","newAuth","setNewAuth","newUrl","setNewUrl","onSubmit","event","preventDefault","url","value","onChange","e","target","type","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","Notification","message","className","token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","login","credentials","App","blogs","setBlogs","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","blogFormRef","useRef","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","addBlog","blogObj","current","returnedBlog","concat","setTimeout","handleLogin","loginService","setItem","stringify","name","removeItem","location","reload","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e62ff3a.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import React, { useState } from 'react'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n    const [newTitle, setNewTitle] = useState([])\r\n    const [newAuth, setNewAuth] = useState([])\r\n    const [newUrl, setNewUrl] = useState([])\r\n\r\n    const handleTitleChange = (e) => {\r\n        setNewTitle(e.target.value)\r\n    }\r\n    const handleAuthChange = (e) => {\r\n        setNewAuth(e.target.value)\r\n    }\r\n    const handleUrlChange = (e) => {\r\n        setNewUrl(e.target.value)\r\n    }\r\n\r\n    const addBlog = (event) => {\r\n        event.preventDefault()\r\n        createBlog({\r\n            title: newTitle,\r\n            author: newAuth,\r\n            url: newUrl,\r\n        })\r\n        setNewTitle('')\r\n        setNewAuth('')\r\n        setNewUrl('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <h2>create new</h2>\r\n        <form onSubmit={addBlog}>\r\n          <p>Title: <input value={newTitle} onChange={handleTitleChange} /></p>\r\n          <p>Author: <input value={newAuth} onChange={handleAuthChange} /></p>\r\n          <p>Url: <input value={newUrl} onChange={handleUrlChange} /></p>\r\n          <button type=\"submit\">save</button>\r\n        </form>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default BlogForm\r\n","import React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\n\r\nexport default { getAll, setToken, create }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport BlogForm from './components/BlogForm'\r\nimport Togglable from './components/Togglable'\r\nimport Notification from './components/Notification'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login' \r\n\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [username, setUsername] = useState('') \r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const blogFormRef = useRef()\r\n\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n\r\n  const addBlog = (blogObj) => {\r\n    blogFormRef.current.toggleVisibility()\r\n    blogService\r\n      .create(blogObj)\r\n      .then(returnedBlog => {\r\n        setBlogs(blogs.concat(returnedBlog))\r\n        setErrorMessage('Created ' + blogObj.title + ' by ' + blogObj.author)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      })\r\n  }\r\n\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogUser', JSON.stringify(user)\r\n      ) \r\n\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n  const logOut = () => {\r\n    window.localStorage.removeItem('loggedBlogUser')\r\n    window.location.reload(false)\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>      \r\n  )\r\n\r\n  const blogForm = () => (\r\n    <Togglable buttonLabel='new blog' ref={blogFormRef}>\r\n      <BlogForm createBlog={addBlog} />\r\n    </Togglable>\r\n\r\n  )\r\n  if (user === null) {\r\n    return (\r\n      <div>\r\n        <h2>Log in to application</h2>\r\n        <Notification message={errorMessage} />\r\n        {loginForm()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <Notification message={errorMessage} />\r\n      <p>Logged in as {user.name}\r\n      <button onClick={() => logOut()}>logout</button></p>\r\n      {blogForm()}\r\n      <h2>blogs</h2>\r\n      {blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}